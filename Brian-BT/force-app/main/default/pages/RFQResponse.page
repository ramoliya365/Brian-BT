<apex:page controller="RFQResponseController"   showheader="false" id="pageId">
    <apex:slds />
    <apex:includeLightning />
    <c:BT_JsAndCssIncludeComponent importJquery="true" importAppurinUtil="true" importJQueryLayout="true" importFancyTree="false"
        importJqGrid="false" importEasyTooltip="true" importAppurinCss="true" importCkEditor="false" importGnattChart="false"
        importLightningDesign="true" />

    <head>
     <!-- <apex:stylesheet value="{!URLFOR($Resource.SLDSv0122, 'assets/styles/salesforce-lightning-design-system-vf.css')}" /> -->
        <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>

        <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>

        <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css" />
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"/>
         <apex:includeScript value="{!$Resource.FileUploadJs}"/>
    </head>

    <style>
    .customPopup1 {
    background-color: white;
    border-style: solid;
    border-width: 2px;
    left: 20%;
    padding: 10px;
    position: absolute;
    z-index: 9999;
    /* These are the 3 css properties you will need to tweak so the pop
                            up displays in the center of the screen. First set the width. Then set
                            margin-left to negative half of what the width is. You can also add
                            the height property for a fixed size pop up.*/
    width: 500px;
    top: 20%;
}

.disabledTextBox {
    background-color: white;
    border: 1px solid;
    color: black;
    cursor: default;
    width: 90px;
    display: table;
    padding: 2px 1px;
    text-align:right;
}

.closeButton {
    float: right;
}
        .hideListButton {
            float: left;
        }

        .showListButton {
            float: left;
        }

        .bPageBlock {
            border-top: unset;
        }

        .customMargin{
            margin-top: 6px;
        }
        #buttonWidth{
            width: 164px;
        }

        .pbHeader {
            display: none;
        }

        .helpOrb {
            display: none;
        }

        .customPopup{
    background-color: lightgrey;
    border-style: solid;
    border-radius: 10px;
    border-width: 1px;
    left: 55%;
    position: fixed;
    padding: 5px;
    box-shadow: 0px 3px 7px rgba(1, 1, 1, 5);
    background: #fff;
    width: 600px;
    margin-left: -200px;
    top: 10px;
    max-width: 700px;
}
.customPopup .close{
    position: absolute;
    top: 10px;
    right: 10px;
    transition: all 200ms;
    font-size: 20px;
    text-decoration: none;
    color: #333;
}
.customPopup .close:hover{
    color: red;
}

    </style>
    <script>

    function updateFileName() {
        var img1 = document.getElementById('page:form1:infile');

        var file = document.getElementById("infile").files[0];
        var file_name = document.getElementById('page:form1:fdesc');
        var fileNameIndex = file.name.lastIndexOf("\\");
        file_name.value = file.name.substring(fileNameIndex + 1);

    }


    var client = new forcetk.Client();
    client.setSessionToken('{!$Api.Session_ID}');

    function upload1() {
        alert('upload');
        document.getElementById("message").innerHTML =
            "Please wait while file is Uploading.........";
        var file = document.getElementById("infile").files[0];
        alert(file);
        client.createBlob('ContentVersion', {
            Origin: 'C', // '' for Chatter File, 'C' for Content Document
            PathOnClient: file.name
        }, file.name, 'VersionData', file, function(response){
            console.log(response);
            alert(response);
            document.getElementById("message").innerHTML =
                "File Uploaded Successfully";

            var ContentVerId=response.id;
            var FileName = file.name;
            alert(FileName);
            UploadFile(ContentVerId,FileName);
        }, function(request, status, response){
            console.log(response);
            document.getElementById("message").innerHTML =
                "Error: " + status;
        });

    }

        function submitQuote() {
            var agreeFunction = new Function("Appurin.lightning.hideModalPopup({'modalPopupId' : 'lightningInfoPopup'}); acfsubmintQuote(); multiFiles(); return false;");
            var confirmPromptOptions = {
                'modalPopupId': 'lightningInfoPopup',
                'title': 'Confirm',
                'message': 'Are you sure that you want to submit your Quote? Once you submit the quote you cannot edit it.',
                'agreeButtonLabel': 'Yes',

                'discardButtonLabel': '{!JSENCODE($Label.buildertek__Cancel)}',
                'agreeFunction': agreeFunction
            }
            Appurin.lightning.showConfirmPrompt(confirmPromptOptions);


        }
        function uploadDocument() {
            acfuploadDocument();
        }

        function closeWindowForUploadFile() {
            acfRefreshFiles();
        }


        function openWindowForUploadFile(selectedFolder, parentFolder, mainObjectFieldAPI, mainObjectId, otherObjectFieldAPI, otherObjectId) {
            var uploadFileURL = '/apex/buildertek__BT_UploadFile?clr=1&sf=' + selectedFolder;
            if (mainObjectFieldAPI != null) {
                uploadFileURL += '&mofa=' + mainObjectFieldAPI + '&moi=' + mainObjectId;
            }
            if (otherObjectFieldAPI != null) {
                uploadFileURL += '&oofa=' + otherObjectFieldAPI + '&ooi=' + otherObjectId;
            }

            window.open(uploadFileURL, "", "width=400,height=500");

            //return false;
        }


        function resizeUploadFileWindow() {
            var uploadFileIframe = document.getElementById("uploadFileIframe").contentWindow;
            j$("#uploadFileIframe").css({ height: uploadFileIframe.j$("body").outerHeight() + 30 });

        }

        function removeFile(fileid) {
            acfRemoveFile(fileid);
        }

        function reloadPage() {
            window.location.reload();
        }

        function showFileNameField() {
            var input = document.getElementById('fileToUpload');
            if (input.files.length > 0) {
                var file = input.files[0];
                document.getElementById('fileNameField').innerHTML = file.name;
                document.getElementById('fileNameId').value = file.name;
            }
        }

    /*function upload() {
            var input = document.getElementById('fileToUpload');
            var fileName = document.getElementById('fileNameField').value;
            var selectedBucket = '{!JSENCODE(selectedBucket)}';
            var selectedFolder = '{!JSENCODE(selectedFolder)}';
            if (input.files.length > 0) {
                var file = input.files[0];
                var att = {};
                att.Size = file.size;
                att.Name = file.name;
                att.Extension = '.' + file.name.split('.').pop();
                att.ContentType = file.type;
                setFileNameWithExtension(att);

                //j$("#fileNameField").val(att.Name);
                att.BucketName = selectedBucket;
                att.Folder = selectedFolder;
                att.Replace = false;
                att.AccessType = 'public';
                att.PublicOnAmazon = true;
                att.AllowCopy = true;
                att.AllowShareViaURL = true;
                att.TrackDownload = false;

                document.getElementById('filekey').value = att.Name;

                setSuccessActionUrl(att);
            }
        }*/

        var uploadFileData = [];

        function fileSelected(){
            var temp = event.target;
            console.log('Event Data == >',{temp});
            var size = document.getElementById('fileToUpload');
            uploadFileData = size.files;
            if (size.files.length > 0) {
                document.getElementById('fileToUpload').disabled = true;
                for (let index = 0; index < size.files.length; index++) {
                    var file = document.getElementById('fileToUpload').files[index];
                    if (file) {
                        console.log('files log ',file);
                        document.getElementById('fileError').style.display = 'none';
                        document.getElementById('fileNameFieldId').innerHTML += `<img class="slds-button__icon slds-button__icon--left" src="{!$Resource.Close_Icon}" alt="remove" onclick="removeFiles(${index})"/> ${file.name} <br/>` ;
                        document.getElementById('fileNameFieldId').style.display = 'block';
                        // document.getElementById('fileNameFieldId').style.flexDirection = 'column';

                        var fileSize = 0;
                        if (file.size > (36 * 1024 * 1024)) {
                            alert('File too large, greater than 36MB');
                            return;
                        }
                        if (file.size > 1024 * 1024)
                            fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
                        else
                            fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
                    }else{

                    }
                }
            }
        }

        function removeFiles(ind) {
            console.log('uploadFileData ==> ',{uploadFileData});
            var filelst = uploadFileData;
            var newFileList = [];
            document.getElementById('fileToUpload').disabled = false;

            for (var index = 0; index < filelst.length; index++) {
                if(ind != index) {
                    newFileList.push(filelst[index]);
                }
            }
            console.log({newFileList});

            uploadFileData = newFileList;
            document.getElementById('fileNameFieldId').innerHTML = null;

            for (let index = 0; index < newFileList.length; index++) {

                var file = newFileList[index]
                console.log('newFileList ==> ',{file});
                document.getElementById('fileError').style.display = 'none';
                document.getElementById('fileNameFieldId').innerHTML += `<img class="slds-button__icon slds-button__icon--left" src="{!$Resource.Close_Icon}" alt="remove" onclick="removeFiles(`+ index +`)"/>`+newFileList[index].name+`<br/>` ;
                document.getElementById('fileNameFieldId').style.display = 'block';

            }


        }

        function upload(){
            var file = document.getElementById('fileToUpload').files[0];
            if(file){
                var reader = new FileReader();
                reader.onload = loaded;
                reader.onerror = errorHandler;
                reader.readAsDataURL(file);
            }else{
                document.getElementById('fileError').style.display = 'block';
            }

        }

        function multiFiles() {
            console.log('uploadFileData @@ ',{uploadFileData});
            if (uploadFileData.length > 0) {
                var fileData = uploadFileData[0];
                var reader = new FileReader();
                reader.onload = multiFilesLoad;
                reader.onerror = errorHandler;
                reader.readAsDataURL(fileData);
            }
        }

        function multiFilesLoad(evt) {
            var fileData = uploadFileData[0];
            console.log('fileData ',{fileData});
            var filename = fileData.name;
            var fileType = fileData.type;
            var fileSize = fileData.size;
            var fileContent = String(evt.target.result);

            console.log('fileContent ==> '+fileContent);
            fileContent = fileContent.substr(fileContent.indexOf(',') + 1);
            uploadContentVersion(filename, fileContent, fileSize, fileType);
        }



        function loaded(evt) {
            var filename = document.getElementById('fileToUpload').files[0].name;
            var fileType = document.getElementById('fileToUpload').files[0].type;
            var fileSize = document.getElementById('fileToUpload').files[0].size;
            var fileContent = String(evt.target.result);
            fileContent = fileContent.substr(fileContent.indexOf(',') + 1);
            uploadContentVersion(filename, fileContent, fileSize, fileType);
        }
        function errorHandler(evt) {
            if (evt.target.error.name == 'NotReadableError') {
                alert('File could not be read');
            }
            else {
                alert(evt.target.error);
            }
        }
        function uploadContentVersion(filename, filecontent, fileSize, fileType) {
            InsertFileInS3(filename, encodeURIComponent(filecontent), fileSize, fileType);
        }

        function setFileNameWithExtension(att) {
            //var extension = '.undefined';
            var extension;
            if (att.Name.indexOf('.') != -1) {
                extension = '.' + att.Name.split('.').pop();
            } else {
                extension = att.Extension;
            }
            if (extension == null || extension == '' || extension == '.') {
                if (att.Extension == null) {
                    extension = '.undefined';
                } else {
                    extension = att.Extension;
                }
            }
            att.Extension = extension;
            if (att.Name.indexOf('.') != -1) {
                if (att.Name.lastIndexOf('.') == att.Name.length - 1) {
                    att.Name = att.Name.substring(0, att.Name.length - 1) + att.Extension;
                }
            } else {
                att.Name = att.Name + att.Extension;
            }
        }

        function setSuccessActionUrl(att) {
            gets3Key();
            window.fileJSON = JSON.stringify(att);

        }
        function saveFile() {
            document.getElementById('fileJSONId').value = window.fileJSON;
            InsertFile();
        }

        function closeModal() {

            ClosePopup();
        }

        function openDeleteConfirm() {
            document.getElementById("idDialog").className = document.getElementById("idDialog").className.replace(/(?:^|\s)slds-fade-in-close(?!\S)/g, ' slds-fade-in-open');
            document.getElementById("idBackDrop").className = document.getElementById("idBackDrop").className.replace(/(?:^|\s)slds-modal-backdrop--close(?!\S)/g, ' slds-modal-backdrop--open');
        }
         function openNewRFIModal() {
            document.getElementById("idDialog1").className = document.getElementById("idDialog1").className.replace(/(?:^|\s)slds-fade-in-close(?!\S)/g, ' slds-fade-in-open');
            document.getElementById("idBackDrop1").className = document.getElementById("idBackDrop1").className.replace(/(?:^|\s)slds-modal-backdrop--close(?!\S)/g, ' slds-modal-backdrop--open');
        }

        function closeWindow() {
            document.getElementById('fileToUpload').value = null;
            document.getElementById('fileNameField').innerHTML = '';
            document.getElementById('fileError').style.display = 'none';
            document.getElementById('fileNameFieldId').innerHTML = '';
            document.getElementById('fileNameFieldId').style.display = 'none';
            document.getElementById("idDialog").className = document.getElementById("idDialog").className.replace(/(?:^|\s)slds-fade-in-open(?!\S)/g, ' slds-fade-in-close');
            document.getElementById("idBackDrop").className = document.getElementById("idBackDrop").className.replace(/(?:^|\s)slds-modal-backdrop--open(?!\S)/g, ' slds-modal-backdrop--close');
            acfRefreshFiles();
        }
        function closeRFIModal() {

            document.getElementById("idDialog1").className = document.getElementById("idDialog").className.replace(/(?:^|\s)slds-fade-in-open(?!\S)/g, ' slds-fade-in-close');
            document.getElementById("idBackDrop1").className = document.getElementById("idBackDrop").className.replace(/(?:^|\s)slds-modal-backdrop--open(?!\S)/g, ' slds-modal-backdrop--close');
            acfRefreshFiles();
        }
         function saveNewRFI() {
            //acCreateRFI();
            acfsubmintRFI();
        }

        function inputLimiter(e, allow) {
            var AllowableCharacters = '';

            if (allow == 'Letters') { AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'; }
            if (allow == 'Numbers') { AllowableCharacters = '1234567890'; }
            if (allow == 'NameCharacters') { AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\''; }
            if (allow == 'NameCharactersAndNumbers') { AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-\''; }
            if (allow == 'Currency') { AllowableCharacters = '1234567890.'; }

            var k = document.all ? parseInt(e.keyCode) : parseInt(e.which);
            if (k != 13 && k != 8 && k != 0) {
                if ((e.ctrlKey == false) && (e.altKey == false)) {
                    return (AllowableCharacters.indexOf(String.fromCharCode(k)) != -1);
                } else {
                    return true;
                }
            } else {
                return true;
            }
        }


    </script>
    <apex:form id="form" html-autocomplete="off">

  <apex:actionStatus id="splashStatus" onstart="startSplash();" onstop="endSplash(); " />

        <apex:actionFunction name="acfsubmintQuote" action="{!submintQuote}" status="splashStatus" rerender="form,iserrorMessage"
        />
        <apex:actionFunction name="fileToBackEnd" action="{!submintQuote}" status="splashStatus" rerender="form,iserrorMessage"
        />


        <apex:actionFunction name="acfuploadDocument" action="{!uploadDocument}" status="splashStatus" rerender="pageId" />
        <apex:actionFunction name="gets3Key" action="{!gets3Key}" status="splashStatus" onComplete="saveFile();" />
        <apex:actionFunction name="InsertFile" action="{!insertFile}" status="splashStatus" oncomplete="closeWindow()" />
       <!-- <apex:actionFunction name="InsertFile" action="{!insertFile}" status="splashStatus" oncomplete="closeWindow()" />
        <apex:actionFunction name="test" action="{!openNewVFpage}" status="test">

            <apex:param name="firstParam" value="" assignTo="{!latestFileName}"/>
            <apex:param name="secondParam" value="" />
            <apex:param name="filesize" value="" assignTo="{!fileSize}"/>
            <apex:param name="filetype" value="" assignTo="{!fileType}"/>
        </apex:actionFunction> -->
        <apex:actionFunction name="InsertFileInS3" action="{!InsertFileInS3}" status="splashStatus" oncomplete="closeWindow()">
            <apex:param name="firstParam" value="" assignTo="{!latestFileName}"/>
            <apex:param name="secondParam" value="" />
            <apex:param name="filesize" value="" assignTo="{!fileSize}"/>
            <apex:param name="filetype" value="" assignTo="{!fileType}"/>
        </apex:actionFunction>
        <div class="slds slds-scope">
            <div id="splashDiv" class="apInitiallyDivDisplayNone" style="z-index:9998;">
                <div class="slds-spinner_container apLightningSpinnerContainer">
                    <div role="status" class="slds-spinner slds-spinner--medium slds-spinner--brand">
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>
            </div>
        </div>
        <apex:outputPanel rendered="{!iserrorMessage == true}" id="iserrorMessage">
            <apex:outputPanel rendered="{!iserrorMessage == true}">
                <div class="slds-notify slds-notify_alert slds-alert_error" role="alert">
                    <span class="slds-assistive-text">error</span>
                    <h2>
                        {!errorMessage}
                    </h2>
                </div>
            </apex:outputPanel>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!rfisaved == true}" id="rfisaved">
            <apex:outputPanel rendered="{!rfisaved == true}">

                    <span class="slds-assistive-text">RFI Created</span>
                    <h2>
                        <!-- RFI created successfully -->
                    </h2>

            </apex:outputPanel>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!isReload == true}" id="isReload">
            <apex:outputPanel rendered="{!isReload == true}">
                <script>
                    window.location.reload();
                </script>
            </apex:outputPanel>
        </apex:outputPanel>
        <div class="slds-scope" style="width:80%;margin: 0 auto;padding: 50px;">

            <apex:outputPanel >
                <apex:pagemessages id="pageLoadErrorMessage" />
                <script>
                    // Appurin.lightning.createLightningPageMessage({ 'classicPageMessageId': '{!JSENCODE($Component.pageLoadErrorMessage)}' });
                </script>
            </apex:outputPanel>
            <!-- <apex:commandLink styleclass="slds-button slds-button_brand slds-m-top--small" style="float: right;" status="busy" onclick="openNewRFIModal();" value="Create RFI" rerender="false" /> -->
            <br/>            <br/>            <br/>
            <div class="slds-box">
<!--<apex:commandButton styleclass="slds-button slds-button_brand slds-m-top--small" style="float: right;" status="busy" value="Create RFI" onclick="callNewRFIPage()" action="{!openNewVFpage}" />-->

                <apex:outputPanel rendered="{!rfqToVendor.Status__c != 'Quote Submitted'}">
                    <div>
                        <span>
                            <c:DisplayImageInTemplate /> 
                        </span>
                        <span>
                            <center>
                                <b>
                                    <ul>
                                        <h2 style="font-size: 1.3rem;text-transform: uppercase;text-decoration: underline;margin-top: -25px;">SUBMIT YOUR QUOTE TO {!rfqToVendor.RFQ__r.Name}</h2>
                                    </ul>
                                </b>
                            </center>
                            <br/>

                        </span>
                    </div>

                    <!--<center><b><ul><h2 style="font-size: 1.3rem;text-transform: uppercase;text-decoration: underline;">SUBMIT YOUR QUOTE TO {!rfqToVendor.RFQ__r.Name}</h2></ul></b></center><br/>-->
                </apex:outputPanel>

                <apex:outputPanel rendered="{!rfqToVendor.Status__c == 'Quote Submitted'}">
                    <div>
                        <span>
                            <c:DisplayImageInTemplate /> 
                        </span>


                        <span>
                            <center>
                                <b>
                                    <ul>
                                        <h2 style="font-size: 1.3rem;text-transform: uppercase;text-decoration: underline;margin-top: -25px;">Thank-You for submitting your bid
                                            <br/>You will hear from us shortly</h2>
                                    </ul>
                                </b>
                            </center>
                            <br/>
                        </span>
                    </div>

                    <!--<center><b><ul><h2 style="font-size: 1.3rem;text-transform: uppercase;text-decoration: underline;">Thank-You for submitting your bid <br/>You will hear from us shortly</h2></ul></b></center><br/>-->
                </apex:outputPanel>


                <apex:pageBlock title="" mode="Edit">

                    <div>
                        <apex:pageBlockSection title="RFQ Details" columns="2">
                            <apex:outputField value="{!rfqToVendor.buildertek__RFQ__r.buildertek__Project__r.Name}" />
                            <apex:outputField value="{!rfqToVendor.name}" />
                            <apex:outputField value="{!rfqToVendor.buildertek__RFQ__r.Name}" />
                            <apex:outputField value="{!rfqToVendor.buildertek__RFQ__r.Due_Date__c}" />
                            <apex:outputField value="{!rfqToVendor.buildertek__RFQ__r.RFQ_Details__c}" />
                            <!--<apex:inputField value="{!rfqToVendor.Notes__c}" styleClass="slds-input" rendered="{!rfqToVendor.Status__c != 'Quote Submitted'}"/>
                            <apex:outputField value="{!rfqToVendor.Notes__c}" styleClass="slds-input" rendered="{!rfqToVendor.Status__c == 'Quote Submitted'}"/>-->
                            <apex:outputField value="{!rfqToVendor.Notes__c}" />

                            <apex:outputField value="{!rfqToVendor.Submitted_Date__c}" rendered="{!rfqToVendor.Status__c == 'Quote Submitted'}" />

                        </apex:pageBlockSection>
                    </div>
                    <br/>
                    <div class="slds-box">
                        <b>
                            <div class="slds-badge" style="font-size: 0.8rem;border-radius: 0 !important;">RFQ Lines</div>
                        </b>

                        <table width="100%" class="slds-table slds-table_bordered slds-table_cell-buffer">
                            <thead>
                                <tr class="slds-text-title_caps">
                                    <th scope="col" width="20%">
                                        Line Item
                                    </th>
                                    <th scope="col" width="23%">

                                        Description
                                    </th>
                                    <th scope="col" width="10%">
                                        Quantity
                                    </th>
                                    <th scope="col" width="10%">
                                            Unit Price &nbsp;({!companycurrency})
                                    </th>
                                    <th scope="col" width="10%">
                                        Estimated Work (Days)
                                    </th>
                                     <th scope="col" width="23%">
                                        Vendor Note
                                    </th>
                                    <th scope="col" width="4%">
                                        Delete
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <apex:variable value="{!0}" var="rowNum" />
                                <apex:repeat value="{!rfqToVendor.buildertek__Vendor_Items__r}" var="item">
                                    <tr>
                                        <td style="white-space: normal">
                                            <apex:outputField value="{!item.Name}" />
                                        </td>
                                        <td style="white-space: normal">

                                            <apex:outputField value="{!item.Description__c}" />
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.Quantity__c}" style="width:100px;" rendered="{!rfqToVendor.Status__c == 'Quote Submitted' || rfqToVendor.Status__c == 'Awarded' || rfqToVendor.Status__c == 'Accepted'}"
                                            />
                                            <apex:outputPanel rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}">
                                                <span class="slds-required" title="required">* </span>
                                                <apex:inputField value="{!item.Quantity__c}" onkeypress="return inputLimiter(event,'Numbers');" styleClass="slds-input" style="width:100px;"
                                                    rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}"
                                                />
                                            </apex:outputPanel>
                                        </td>
                                        <td>

                                            <apex:outputField value="{!item.Unit_Price__c}" styleClass="slds-input" style="width:100px;" rendered="{!rfqToVendor.Status__c == 'Quote Submitted' || rfqToVendor.Status__c == 'Awarded' || rfqToVendor.Status__c == 'Accepted'}"
                                            />
                                            <apex:outputPanel rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}">
                                                <span class="slds-required" title="required">* </span>
                                                <apex:inputField value="{!item.Unit_Price__c}" onkeypress="return inputLimiter(event,'Currency');" styleClass="slds-input"
                                                    style="width:100px;" rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}"
                                                />
                                            </apex:outputPanel>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.Estimated_Work_Days__c}" style="width:100px;" rendered="{!rfqToVendor.Status__c == 'Quote Submitted' || rfqToVendor.Status__c == 'Awarded' || rfqToVendor.Status__c == 'Accepted'}"
                                            />
                                          <apex:outputPanel rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}">
                                               <span class="" title=""> </span>
                                                <apex:inputField value="{!item.Estimated_Work_Days__c}" onkeypress="return inputLimiter(event,'Numbers');" styleClass="slds-input" style="width:100px;"
                                                    rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}"
                                                />
                                            </apex:outputPanel>
                                        </td>
                                        <td>
                                            <apex:outputField value="{!item.Vendor_Note__c}" styleClass="slds-input" rendered="{!rfqToVendor.Status__c == 'Quote Submitted' || rfqToVendor.Status__c == 'Awarded' || rfqToVendor.Status__c == 'Accepted'}"
                                            />
                                            <apex:inputTextArea value="{!item.Vendor_Note__c}" styleClass="slds-input" rendered="{!rfqToVendor.Status__c != 'Quote Submitted' && rfqToVendor.Status__c != 'Awarded' && rfqToVendor.Status__c != 'Accepted'}"
                                            />
                                        </td>
                                        <td>
                                            <!-- <apex:commandButton styleclass="slds-button slds-button_neutral slds-m-top--small" title="Delete" value="X" action="{!addNewRowToAccList}" Status="status" immediate="true" />
                                        -->
                                        </td>

                                    </tr>
                                </apex:repeat>
                                <apex:repeat value="{!wrapList}" var="eachRecord" id="theRepeat">
                                    <tr>
                                        <td>
                                            <span class="slds-required" title="required">* </span>
                                            <apex:inputField value="{!eachRecord.record.Name}" styleClass="slds-input" />
                                        </td>
                                        <td>
                                            <apex:inputField value="{!eachRecord.record.Description__c}" styleClass="slds-input" />
                                        </td>
                                        <td>
                                            <span class="slds-required" title="required">* </span>
                                            <apex:inputField value="{!eachRecord.record.Quantity__c}" onkeypress="return inputLimiter(event,'Numbers');" styleClass="slds-input"
                                                style="width:100px;" />
                                        </td>
                                        <td>
                                            <span class="slds-required" title="required">* </span>
                                            <apex:inputField value="{!eachRecord.record.Unit_Price__c}" onkeypress="return inputLimiter(event,'Currency');" styleClass="slds-input"
                                                style="width:100px;" />
                                        </td>
                                        <td>
                                            <apex:inputField value="{!eachRecord.record.Estimated_Work_Days__c}" onkeypress="return inputLimiter(event,'Numbers');" styleClass="slds-input"
                                                style="width:100px;" />
                                        </td>
                                        <td>
                                            <apex:inputField value="{!eachRecord.record.Vendor_Note__c}" styleClass="slds-input" />
                                        </td>
                                        <td>
                                            <apex:commandLink styleclass="slds-button slds-button_neutral slds-m-top--small" title="Delete" rerender="form" value="X"
                                                action="{!removeRowFromList}" Status="status" immediate="true">
                                                <apex:param value="{!rowNum}" name="rowToRemove" assignTo="{!rowToRemove}" />
                                            </apex:commandLink>
                                        </td>
                                    </tr>
                                    <apex:variable var="rowNum" value="{!rowNum + 1}" />
                                </apex:repeat>
                            </tbody>
                        </table>
                        <apex:commandLink styleclass="slds-button slds-button_brand slds-m-top--small" rerender="form" value="Add More" action="{!addNewRowToAccList}"
                            Status="status" />
                    </div>
                </apex:pageBlock>
                <apex:outputPanel id="pb2">
                    <br/>
                    <div class="slds-box">
                        <b>
                            <div class="slds-badge" style="background-color: #e0e5ee;font-size: 0.8rem;border-radius: 0 !important;">Related Documents</div>
                            <div style="float:right;">
                                <apex:outputPanel rendered="{!showCreateRFI == true}">
                                    <apex:commandLink styleclass="slds-button slds-button_brand " style="float: right;" status="busy" onclick="openNewRFIModal();" value="Create RFI" rerender="false" />
                                </apex:outputPanel>
                            </div>
                        </b>
                        <ul>

                            <apex:repeat value="{!fileWrapperClass}" var="file">
                                <li>
                                    &nbsp;&nbsp;
                                    <a href="{!file.imgUrl}" title="{!file.imgTitle}" target="_blank">{!file.imgTitle}</a>
                                </li>
                            </apex:repeat>
                        </ul>
                    </div>
                    <br/>

                    <div class="slds-box">
                        <b>
                            <div class="slds-badge" style="background-color: #e0e5ee;font-size: 0.8rem;border-radius: 0 !important;">Vendor Documents</div>
                            <!-- <div style="float:right;">
                                <apex:commandLink styleClass="{!if(rfqToVendor.Status__c == 'Quote Submitted','display:none','')}" onclick="openDeleteConfirm();"
                                    value="Upload New Document" rerender="false" />
                            </div> -->

                        <div class="slds-file-selector__dropzone customMargin">
                            <input id="fileToUpload" type="file" name="file" class="slds-file-selector__input slds-assistive-text"
                                     aria-describedby="fileLabel" onchange="fileSelected()" />
                            <label class="slds-file-selector__body" for="fileToUpload">
                                <div class="slds-file-selector__button slds-button slds-button_brand" id="buttonWidth">
                                    <img class="slds-button__icon slds-button__icon--left" src="{!$Resource.buildertek__SLDS+'/assets/icons/utility/upload_60.png'}"
                                    /> Upload New Files
                                </div>
                                <div styleClass="slds-file-selector__text">
                                    <!-- or Drop Files -->
                                </div>
                            </label>
                            <div id="fileNameFieldId" style="display: none" class="slds-text-body_small slds-text-color_success"></div>
                            <div id="fileError" style="display:none;" class="slds-text-body_small slds-text-color_error">{!$Label.Please_Select_File}</div>
                        </div>
                    </b>
                        <!-- <ul id="vendorDocId">
                            <apex:repeat value="{!files}" var="file">
                                <li>
                                    &nbsp;&nbsp;
                                    <a onclick="removeFile('{!JSENCODE(file.Id)}');" title="Remove" style="{!if(rfqToVendor.Status__c == 'Quote Submitted','display:none','')}">
                                        <span id="showFilesRemove{!file.Id}" class="slds-text-selected-focus">
                                            <c:BT_LightningSvg parentId="showFilesRemove{!file.Id}" styleClass="slds-button__icon--stateful slds-button__icon--left"
                                                path="/assets/icons/utility-sprite/svg/symbols.svg#close" />
                                        </span>
                                    </a>
                                    <a href="{!file.File_Presigned_URL__c}" title="{!file.Description__c}">{!file.Name}</a>
                                </li>
                            </apex:repeat>
                        </ul> -->
                    </div>
                    <br/>
                   <!-- <div style="height: 180px;">-->
                        <center>
                            <button type="button" class="slds-button slds-button_neutral" onclick="window.close();">Close</button>
                            <button type="button" class="{!if(rfqToVendor.buildertek__Status__c == 'Quote Submitted','slds-hide','slds-button slds-button_brand')}"
                                onclick="submitQuote();">Submit</button>
                        </center>
                  <!--  </div>-->
                    <apex:actionRegion >
                        <apex:actionFunction name="acfRefreshFiles" action="{!refreshFiles}" status="splashStatus" rerender="pb2" />
                        <apex:actionFunction name="acCreateRFI" action="{!createRFI}"  />
                        <apex:actionFunction name="acfRemoveFile" action="{!removefile}" status="splashStatus" onComplete="acfRefreshFiles();">
                            <apex:param name="fileid" value="" />
                        </apex:actionFunction>
                    </apex:actionRegion>
                </apex:outputPanel>
            </div>

            <apex:outputPanel layout="block" id="lightningInfoPopup" style="display: none; z-index: 8552;">
                <div class="apModal" style="z-index: 8551;">
                    <div class="apModalContainer">
                        <div class="apModalHeader">
                            <button id="lightningInfoPopupCloseIcon" class="slds-button slds-modal__close slds-button--icon-inverse" onClick="Appurin.lightning.hideModalPopup({'modalPopupId':'{!JSENCODE($Component.lightningInfoPopup)}'}); return false;"
                                title="{!$Label.Close}">
                                <c:BT_LightningSvg parentId="lightningInfoPopupCloseIcon" styleClass="slds-button__icon slds-button__icon--large" path="/assets/icons/utility-sprite/svg/symbols.svg#close"
                                />
                                <span class="slds-assistive-text">{!$Label.Close}</span>
                            </button>
                            <h2 class="apModalHeading" id="lightningInfoPopupHeader">{$Label.Warning}</h2>
                        </div>
                        <div class="apModalContent">
                            <div class="apNotifyContainer" style="position: relative; text-align:left;">
                                <div>
                                    <h2 id="lightningInfoPopupMessage"></h2>
                                </div>
                            </div>
                        </div>
                        <div class="apModalFooter">
                            <button id="lightningInfoPopupOkButton">{!$Label.Ok}</button>
                            <button id="lightningInfoPopupCloseButton">{!$Label.Close}</button>
                        </div>
                    </div>
                </div>
                <div class="slds-backdrop slds-backdrop--open" style="z-index: 5881;"></div>
            </apex:outputPanel>
            <!-- <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-close" id="idDialog">
                <div class="slds-modal__container" style="width:50%">
                    <div class="slds-modal__header">
                        <h2>Upload Files</h2>
                    </div>
                    <div class="slds-modal__content">
                        <form class="fileSubmitForm" id="fileSubmitForm" action="https://s3.amazonaws.com/{!selectedBucket}" method="post" enctype="multipart/form-data">
                            <input type="hidden" id="fileNameId" name="fileName" />
                            <input type="hidden" id="filekey" name="key" />
                            <input type="hidden" id="AWSAccessKeyId" name="AWSAccessKeyId" />
                            <input type="hidden" id="policy" name="policy" />
                            <input type="hidden" id="signature" name="signature" />
                            <input type="hidden" id="fileJSONId" name="fileJSON" />

                            <input type="hidden" name="success_action_redirect" id="successActionRedirect" />
                            <div class="slds-grid" style="background:#f4f6f9;padding: 0px;">
                                <div class="slds-panel slds-grid slds-grid-vertical slds-nowrap slds-is-editing" style="box-shadow: none;">
                                    <div class="slds-form-stacked slds-grow slds-scrollable-y">
                                        <div class="slds-panel__section">
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <div class="slds-file-selector slds-file-selector-files">
                                                        <div class="slds-file-selector__dropzone">
                                                            <input id="fileToUpload" type="file" name="file" class="slds-file-selector__input slds-assistive-text"
                                                                     aria-describedby="fileLabel" onchange="fileSelected()"/>
                                                            <label class="slds-file-selector__body" for="fileToUpload">
                                                                <div class="slds-file-selector__button slds-button slds-button_brand">
                                                                    <img class="slds-button__icon slds-button__icon-left" src="{!$Resource.buildertek__SLDS+'/assets/icons/utility/upload_60.png'}"
                                                                    /> Upload New Files
                                                                </div>
                                                                <div styleClass="slds-file-selector__text">

                                                                </div>
                                                            </label>
                                                            <div id="fileNameFieldId" style="display: none" class="slds-text-body_small slds-text-color_success"></div>
                                                            <div id="fileError" style="display:none;" class="slds-text-body_small slds-text-color_error">{!$Label.Please_Select_File}</div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="slds-grid slds-grid-pull-padded-medium">
                                                <div class="slds-col slds-p-horizontal-medium slds-size-1-of-2">
                                                    <div id="fileNameField">

                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>

                    </div>
                    <div class="slds-modal__footer">
                        <div class="slds-button-group slds-float-right" role="group">
                            <input type="button" class="slds-button slds-button-neutral cancel" onclick="closeWindow();" value="Cancel" />
                            <input type="button" class="slds-button slds-button-brand save" onclick="upload();" value="Upload" />
                        </div>
                    </div>
                </div>
            </div> -->
            <div class="slds-modal-backdrop slds-modal-backdrop--close" id="idBackDrop"></div>
        </div>


            <div class="slds-modal-backdrop slds-modal-backdrop--close" id="idBackDrop1"></div>
    </apex:form>


     <apex:form id="form1" html-autocomplete="off" enctype="multipart/form-data">
        <apex:actionFunction name="acfsubmintRFI" action="{!createRFI}"
        />

        <apex:actionFunction name="UploadFile" action="{!UploadFileonClick}" status="status" rerender="message">
            <apex:param value="" name="firstvalue"/>
            <apex:param value="" name="secondvalue"/>
        </apex:actionFunction>

       <div aria-hidden="false" role="dialog" class="slds-modal slds-fade-in-close" id="idDialog1">
                <div class="slds-modal__container" style="width:100%">
                    <div class="slds-modal__header" style="width:633px;">
                        <h2>Create New RFI</h2>
                    </div>
                    <div class="slds-modal__content" style="width:633px;">

                    <apex:pageBlock >
                           <apex:pageBlockSection >
                             <table width="100%" class="slds-table slds-table_bordered slds-table_cell-buffer">
                                <tbody>
                                    <tr>
                                             <td>
                                                <span class="slds-required" title="required">* </span>
                                                <apex:outputField value="{!rfqrec1.Name}"  label="RFQ" style="width:320px;" />
                                            </td>
                                        </tr>
                                       <tr>
                                             <td>
                                                <span class="slds-required" title="required">* </span>
                                                <apex:inputField value="{!newrfi.Subject__c}" styleClass="slds-input"  style="width:406px;" required="true"/>
                                            </td>
                                        </tr>
                                       <tr>
                                            <td>
                                                <span class="slds-required" title="required">* </span>
                                                <apex:inputField value="{!newrfi.Question__c}" styleClass="slds-input" style="width:320px;" required="true"/>
                                            </td>
                                        </tr>

                                         <!--<tr>
                                            <td>
                                                <!-- <span class="slds-required" title="required">* </span> -->
                                                <!-- <apex:inputField value="{!rfqToVendor.RFQ__r.buildertek__Project__r.Name}" styleClass="slds-input" style="width:320px;" /> -->
                                               <!-- <apex:outputField value="{!rfqToVendor.RFQ__r.buildertek__Project__r.Name}"  label="Project Name" style="width:320px;"/>
                                            </td>
                                        </tr>-->
                                         <tr>
                                             <td>
                                                <span class="slds-required" title="required">* </span>
                                                <apex:inputField value="{!newrfi.Due_Date__c}" styleClass="slds-input" style="width:320px;" required="true"/>
                                            </td>
                                        </tr>
                                        <!-- <tr>
                                            <td>
                                                  <apex:inputField value="{!newrfi.RFI_Assigned_To__c}" styleClass="slds-input" />
                                            </td>
                                        </tr> -->
                                        <tr>
                                            <td>
                                                <!-- <apex:outputLabel >RFI Assigned To</apex:outputLabel> -->
                                                <apex:outputField value="{!rfqrec1.RFI_Owner__c}"  label="RFI Assigned To" style="width:320px;"/>

                                            </td>
                                        </tr>

                                        <!-- <tr>
                                            <td></td>
                                            <td>
                                                <apex:inputFile value="{!attachRec.body}" filename="{!attachRec.name}" id="file" style="margin-left:10px !important;border: none;" styleclass="slds-button slds-file-selector__button"  />
                                            </td>

                                        </tr> -->

                                </tbody>
                            </table>
                        </apex:pageBlockSection>


                    </apex:pageBlock>



                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <apex:inputFile value="{!attachRec.body}" filename="{!attachRec.name}" id="file" style="margin-left:220px !important;border: none;" styleclass="slds-button slds-file-selector__button"  />

                    <!-- <div class="slds-file-selector__dropzone">
                        <label class="slds-file-selector__body" for="fileToUpload1">
                            <div class="slds-file-selector__button slds-button slds-button_brand">
                                <img class="slds-button__icon slds-button__icon--left" src="{!$Resource.buildertek__SLDS+'/assets/icons/utility/upload_60.png'}"
                                /> Upload Files
                            </div>
                            <div styleClass="slds-file-selector__text">

                            </div>
                        </label>
                    </div>  -->

                    <br/>
                    <br/>
                    </div>
                    <div class="slds-modal__footer" style="width:633px;">
                        <div class="slds-button-group slds-float--right" role="group">
                            <input type="button" class="slds-button slds-button--neutral " onclick="closeRFIModal();" value="Cancel" />
                            <input type="button" class="slds-button slds-button--brand " onclick="acfsubmintRFI();" value="Save" />
                        </div>
                    </div>
                </div>
            </div>

     </apex:form>




</apex:page>