public class boxAPICall_handler {
    
    //
    //Generated by AdminBooster
    //
    
    public class fromJSON{
        public String type; //folder
        public String id;   //145643049852
        public String sequence_id;  //0
        public String etag; //0
        public String name; //Dell Account
        public String created_at;   //2021-09-13T03:42:36-07:00
        public String modified_at;  //2021-09-13T03:42:36-07:00
        public String description;  //
        public Integer size;    //0
    }  
    
    
    @future(callout=true)
    public static void getboxFolderID(string acc,string preQualId,boolean isMulti){
        List<String> namelist = new List<String>();
        List<Account> accountList = [select id,name,buildertek__Box_Folder_Id__c from Account Where id =:acc];
        system.debug(accountList);
        List<Account> acct = [select id,name,buildertek__Box_Folder_Id__c from Account where name=:accountList[0].name AND buildertek__Box_Folder_Id__c != ''];
        system.debug(acct);
        for(Account account : acct){
            namelist.add(account.name);
        }
        system.debug(namelist);
        system.debug('box class called');
        string clientid = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Client_Id__c;
        string client_secret = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Client_Secret__c;
        string ViewAPI_Key = buildertek__Box_Settings__c.getValues('BOX API').buildertek__API_Key__c;
        string AccessToken = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Access_Token__c;
        string RefreshToken = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Refresh_Token__c;
        string EnterpriceId = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Enterprise_ID__c;
        string parentfolderId = buildertek__Box_Settings__c.getValues('BOX API').buildertek__Box_Parent_Folder_Id__c;
        string Response='';
        //string folderResponse='';
        
        
        HttpRequest req1 = new HttpRequest();
        string endPointURL='https://app.box.com/api/oauth2/token?';
        System.debug('******endPointURL:'+endPointURL);
        req1.setEndpoint(endPointURL);
        req1.setMethod('POST');
        req1.setHeader('Content-Type','application/x-www-form-urlencoded');
        String bb='grant_type=authorization_code';
        req1.setbody('grant_type=client_credentials'+
                     '&box_subject_type=enterprise'+
                     '&box_subject_id='+EnterpriceId+
                     '&client_id='+clientid+
                     '&client_secret='+client_secret);
        req1.setHeader('Accept','application/json');
        Http http = new Http();
        HTTPResponse res1 = http.send(req1);
        Response=res1.getBody();
        Integer statusCode=res1.getStatusCode();
        System.debug(Response);
        // Parse JSON response to get refresh_token values.
        JSONParser parser = JSON.createParser(Response);
        while (parser.nextToken() != null) {
            if ((parser.getCurrentToken() == JSONToken.FIELD_NAME)){
                String fieldName = parser.getText();
                parser.nextToken();
                if(fieldName == 'access_token') {
                    AccessToken= parser.getText();
                }if(fieldName == 'refresh_token') {
                    RefreshToken= parser.getText();
                }
            }
        }
        
        System.debug(accountList);
        
        //if(base64String != ''){
        for(Account ac:accountList){
            system.debug('$$$$$'+ac.Id);
            String foldername;
            if(ac.buildertek__Box_Folder_Id__c == '' || ac.buildertek__Box_Folder_Id__c == null){
                /*if(namelist.contains(ac.Name)){
foldername = ac.Name+system.now();
}else{
system.debug('Esleeeeeee');
foldername = ac.Name+system.now();
}*/
                system.debug(ac.Name);
                
                if(!String.isBlank(ac.Name)){
                    String accName = ac.Name;
                    accName = accName.replaceAll('[^a-zA-Z0-9\\s+]', '');
                    system.debug('8888888'+ac.Name);
                    foldername = accName+system.now();
                }else{
                    foldername = ''+system.now();
                }
                system.debug(foldername);
                //String parentfolderId = System.Label.BoxParentFolderId;
                string folderResponse='';
                HttpRequest req = new HttpRequest();
                string endPointURL2='https://api.box.com/2.0/folders/';
                System.debug('******endPointURL:'+endPointURL);
                req.setEndpoint(endPointURL2);
                req.setMethod('POST');
                req.setHeader('Content-Type','application/json');
                req.setHeader('Authorization','Bearer ' + AccessToken);
                string bbody='{"name":"'+foldername+'", "parent": {"id":"'+parentfolderId+'"}} ';
                req.setbody(bbody);
                Http http2 = new Http();
                HTTPResponse res = http2.send(req);
                folderResponse=res.getBody();
                system.debug(res.getStatusCode());
                Integer uploadStatusCode=res.getStatusCode();
                system.debug(folderResponse);
                if(uploadStatusCode == 201){
                    system.debug('@@'+folderResponse);
                    fromJSON jsondata = (fromJSON) System.JSON.deserialize(folderResponse, fromJSON.class);
                    system.debug('*********jsondata'+jsondata.id);
                    //updateAccount(jsondata,ac.Id);
                    
                    if(isMulti == true){   
                        foldername = 'PreQual-'+ac.Id+system.now();
                        //String parentfolderId = System.Label.BoxParentFolderId;
                        string folderResponses='';
                        HttpRequest reqs = new HttpRequest();
                        string endPointURL2s='https://api.box.com/2.0/folders/';
                        System.debug('******endPointURL:'+endPointURL);
                        reqs.setEndpoint(endPointURL2s);
                        reqs.setMethod('POST');
                        reqs.setHeader('Content-Type','application/json');
                        reqs.setHeader('Authorization','Bearer ' + AccessToken);
                        string bbodys='{"name":"'+foldername+'", "parent": {"id":"'+jsondata.id+'"}}';
                        reqs.setbody(bbodys);
                        Http http2s = new Http();
                        HTTPResponse ress = http2s.send(reqs);
                        folderResponses=ress.getBody();
                        system.debug(ress.getStatusCode());
                        system.debug('@@@@@@@@@@'+ress.getbody());
                        Integer uploadStatusCodes=ress.getStatusCode();
                        system.debug(folderResponses);
                        if(uploadStatusCodes == 201){
                            system.debug('@@'+folderResponses);
                            fromJSON jsondatas = (fromJSON) System.JSON.deserialize(folderResponses, fromJSON.class);
                            updatePreQualRecord(jsondatas,preQualId);
                            
                        }
                    }
                    updateAccount(jsondata,ac.Id);  
                }
            } else{
                /* Creating Box folder in Prequal record*/  
                
                foldername = 'PreQual-'+ac.Id+system.now();
                //String parentfolderId = System.Label.BoxParentFolderId;
                string folderResponse='';
                HttpRequest req = new HttpRequest();
                string endPointURL2='https://api.box.com/2.0/folders/';
                System.debug('******endPointURL:'+endPointURL);
                req.setEndpoint(endPointURL2);
                req.setMethod('POST');
                req.setHeader('Content-Type','application/json');
                req.setHeader('Authorization','Bearer ' + AccessToken);
                string bbody='{"name":"'+foldername+'", "parent": {"id":"'+ac.buildertek__Box_Folder_Id__c+'"}} ';
                req.setbody(bbody);
                Http http2 = new Http();
                HTTPResponse res = http2.send(req);
                folderResponse=res.getBody();
                system.debug(res.getStatusCode());
                Integer uploadStatusCode=res.getStatusCode();
                system.debug(folderResponse);
                if(uploadStatusCode == 201){
                    system.debug('@@'+folderResponse);
                    fromJSON jsondata = (fromJSON) System.JSON.deserialize(folderResponse, fromJSON.class);
                    updatePreQualRecord(jsondata,preQualId);
                    
                }
                /*foldername = 'PreQual-'+ac.Id+system.now();
//String parentfolderId = System.Label.BoxParentFolderId;
string folderResponses='';
HttpRequest reqs = new HttpRequest();
string endPointURL2s='https://api.box.com/2.0/folders/';
System.debug('******endPointURL:'+endPointURL);
reqs.setEndpoint(endPointURL2s);
reqs.setMethod('POST');
reqs.setHeader('Content-Type','application/json');
reqs.setHeader('Authorization','Bearer ' + AccessToken);
string bbodys='{"name":"'+foldername+'", "parent": {"id":"162002636609"}} ';
req.setbody(bbodys);
Http http2s = new Http();
HTTPResponse ress = http2s.send(reqs);
folderResponses=ress.getBody();
system.debug(ress.getStatusCode());
system.debug('@@@@@@@@@@'+ress.getbody());
Integer uploadStatusCodes=ress.getStatusCode();
system.debug(folderResponses);
if(uploadStatusCodes == 201){
system.debug('@@'+folderResponses);
fromJSON jsondatas = (fromJSON) System.JSON.deserialize(folderResponses, fromJSON.class);
updatePreQualRecord(jsondatas,preQualId);

}*/
                
            }
            
        }
        //}               
        
        
    }
    public static void updatePreQualRecord(fromJSON UC,Id accId){
        system.debug(accId);
        //List<Account> accUpdateList = new List<Account>();
        system.debug(UC.id);
        buildertek__Pre_Qual__c accrec = new buildertek__Pre_Qual__c();
        accrec.id = accId;
        accrec.buildertek__Box_Folder_Id__c = UC.id;
        update accrec;
        //accUpdateList.add(accrec);
        system.debug(UC.id);
        system.debug(accrec);
    }
    
    public static void updateAccount(fromJSON UC,Id accId){
        //List<Account> accUpdateList = new List<Account>();
        system.debug(UC.id);
        Account accrec = new Account();
        accrec.id = accId;
        accrec.buildertek__Box_Folder_Id__c = UC.id;
        update accrec;
        //accUpdateList.add(accrec);
        system.debug(UC.id);
        system.debug(accrec);
    }
    
    
}