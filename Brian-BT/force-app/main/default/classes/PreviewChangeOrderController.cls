public with sharing class PreviewChangeOrderController {
    
     @AuraEnabled
    public Static List<EmailTemplate> getTemplates(){
     List<Emailtemplate> temrec;
    
            temrec = [Select Id, Name, folder.name from Emailtemplate where folder.name = 'BT CO' and Name !=:'Change Order1'];
            
        return temrec;
    }
    
    @AuraEnabled
    public static string getChangeOrderLines(String recordId, String templateId){
         string templateBody = '';
        string templateBody1 = '';
        string templateBody2 = '';
        Contact con ;
       
            con = [select id, Email from Contact where email != null order by createddate desc limit 1 ];
            
        String[] toaddres;
        toaddres = new String[]{con.email};
        Savepoint sp = Database.setSavepoint();
        list<Messaging.SingleEmailMessage> msgList= new List<Messaging.SingleEmailMessage>(); 
        list<Messaging.SingleEmailMessage> msgList1= new List<Messaging.SingleEmailMessage>(); 
        List<String> templateList = new List<String>();
        Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
        
        string theTemplate = [SELECT Id FROM EmailTemplate WHERE Id =: templateId].Id; 
        System.debug('templateId' + templateId);
        System.debug('theTemplate' + theTemplate);

        email.setTemplateId(theTemplate);
        email.setWhatId(recordId);                        
        email.setTargetObjectId(con.Id);       
        email.setSaveAsActivity(true);
        email.setToAddresses(toaddres);
        msgList.add(email);
        
        Messaging.SendEmailResult [] r = Messaging.sendEmail(new Messaging.SingleEmailMessage[] {email}); 
        System.debug('Email Results isSuccess = ' +  r[0].IsSuccess());
        Database.rollback(sp); 
        for (Messaging.SingleEmailMessage emailNew : msgList) {                   
            templateBody1 = emailNew.getHTMLBody(); 
        }
        templateBody = templateBody1 ;
        system.debug('Final templateBody ----------> '+templateBody);
        return templateBody;
        
    }
    
     @AuraEnabled
     public static String sendProposal(String htmlBody, String recordId, String templateId, List<String> to, List<String> cc,string Emailsubject){
        try{
             string fileid = '';
             String body = '';
             //String subject =  Emailsubject;  
            // String subject = ' Change Order [ref:' + recordId + ']';
            buildertek__Change_Order__c changeRec = [select id, Name , buildertek__Auto_Number__c , buildertek__Project__r.Name , buildertek__Project__r.buildertek__Auto_Number__c from buildertek__Change_Order__c where Id =: recordId Limit 1];

             String subject='';
             list<buildertek__Admin_Interface_Node_Configuration__c> adminInterfaceNodeConfigurations = [Select Id,
                                                                                                  buildertek__Quote_Configuration__c,buildertek__Email_Subject__c 
                                                                                                  from buildertek__Admin_Interface_Node_Configuration__c
                                                                                                  WHERE Name=:'Change Order Configuration' and buildertek__Email_Subject__c !=null limit 1];
            if(adminInterfaceNodeConfigurations.size()>0){
                subject = adminInterfaceNodeConfigurations[0].buildertek__Email_Subject__c;
            }else{
                subject = 'Change Order'; 
            } 
              system.debug('htmlBody----'+htmlBody);
              system.debug('recordId----'+recordId);
              system.debug('to----'+to);
              system.debug('cc----'+cc);
              system.debug('Emailsubject----'+Emailsubject);
              system.debug('templateId----'+templateId);
            List<string> strTO = new List<string>();
            List<string> strCC = new List<string>();
            SET<Id> contactIdSet = new SET<Id>();
            List<Contact> conList = new List<Contact>();
            if(Schema.sObjectType.Contact.fields.Id.isAccessible()
                && Schema.sObjectType.Contact.fields.email.isAccessible()){
                conList = [Select Id, email from Contact where Id IN:to and email != null];        
            }
            system.debug('conList -------> '+conList);
            for(Contact con: conList){
                strTO.add(con.email);
            }
            List<Contact> ccConList = new List<Contact>(); 
            if(cc.size() > 0 && Schema.sObjectType.Contact.fields.Id.isAccessible()
                && Schema.sObjectType.Contact.fields.Email.isAccessible()){
                ccConList = [Select Id, email from Contact where Id IN:cc and Email != null];        
            }
            if(ccConList.size() > 0){
                for(Contact con: ccConList){
                    strCC.add(con.email);
                }    
            }
             
             List<Messaging.SingleEmailMessage> mails = new List<Messaging.SingleEmailMessage>();
             Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
             system.debug('strTO ---------> '+strTO);
             mail.setToAddresses(strTO);
             if(conList.size()>0){
                 mail.setTargetObjectId(conList[0].Id);
                 mail.setWhatId(recordId);
             }
             if(strCC != null && strCC.size() > 0) {
                 system.debug('strCC -------> '+strCC);
                mail.setCcAddresses(strCC);
             }
             EmailServicesAddress eServices;
           
                 eServices =  [SELECT Id,AuthorizedSenders,EmailDomainName,IsActive,LocalPart FROM EmailServicesAddress where LocalPart = 'projects'];
            
             string fromAddress = eServices.LocalPart+'@'+eServices.EmailDomainName; 
              List<buildertek__ConfirmationPageSiteURL__c> confirmationurl = buildertek__ConfirmationPageSiteURL__c.getall().values();
             string SiteUrl;
             if(confirmationurl.size() > 0){
               SiteUrl = confirmationurl[0].buildertek__SiteURL__c ;
             }
             body += 'Hello, <br/><br/> ';
             body += '</br> Please &nbsp;'; 
             body += '<a href='+ SiteUrl +'buildertek__ConfirmationPage?Id='+recordId+'&templateId='+templateId+'>Click here</a>';
             body += '&nbsp;to confirm your Change Order details. <br/> <br/> <br/>' ;   
           // body += '<br/><center><a href="mailto:'+fromAddress+'?subject='+subject+'&body=Approved"><button type="button" style="cursor: pointer;background-color: #005fb2;color: white;padding-left: 16px;padding-right: 16px;text-align: center;vertical-align: middle;border: 1px solid #0070d2;line-height: 30px;min-height: 32px;cursor: pointer;">Approve</button></a> &nbsp;&nbsp;&nbsp;<a href="mailto:'+fromAddress+'?subject='+subject+'&body=Rejected"><button type="button" style="cursor: pointer;background-color: #a61a14;color: white;padding-left: 16px;padding-right: 16px;text-align: center;vertical-align: middle;border: 1px solid #0070d2;line-height: 30px;min-height: 32px;cursor: pointer;">Reject</a></button></center><br/>';

             mail.setReplyTo(fromAddress);
             subject = subject ; 
            //  subject = subject +'[ref:'+recordId+']';
             mail.setSubject(subject);
             mail.setHTMLBody(body);
             mail.setSaveAsActivity(true);
             List<Messaging.Emailfileattachment> fileAttachments = new List<Messaging.Emailfileattachment>();
             Messaging.Emailfileattachment efa = new Messaging.Emailfileattachment();


             efa.setFileName(changeRec.buildertek__Project__r.Name +'-' + changeRec.buildertek__Project__r.buildertek__Auto_Number__c +'-' + changeRec.buildertek__Auto_Number__c+'.pdf');
            system.debug('templateid-----'+templateId+'record---> '+recordId);
             system.debug('Blob ---> '+setAttachmentBody(recordId, templateId,fileid));
             efa.setBody(setAttachmentBody(recordId, templateId,fileid));
             fileAttachments.add(efa); 
             mail.setFileAttachments(fileAttachments);
             mails.add(mail);
             Messaging.SendEmailResult[] results = Messaging.sendEmail(mails);
             String message = 'Success';
             
             if(results.size() > 0){
                if (results[0].isSuccess()) {
                    string Toaddresses= '';
                    string CCaddresses= '';
                    integer i = 0;
                    for(String Str : strTO){
                        Toaddresses += Str;
                        if(strTO.size() > i){
                            Toaddresses += ';';
                        }
                        i++;
                    }
                    for(String Str : strCC){
                        CCaddresses += Str;
                        if(strCC.size() > i){
                            CCaddresses += ';';
                        }
                        i++;
                        
                    }
                    system.debug('CCaddresses ----------> '+CCaddresses);
                    
                  

                
                    EmailMessage caseEmailMessage = new EmailMessage();
                    caseEmailMessage.fromAddress= UserInfo.getUserEmail();
                    caseEmailMessage.ToAddress = Toaddresses;
                    caseEmailMessage.FromName = UserInfo.getUserName();
                    caseEmailMessage.CcAddress = CCaddresses;
                    caseEmailMessage.Subject = subject;
                    caseEmailMessage.HtmlBody = body;
                    caseEmailMessage.Incoming= False;
                    //caseEmailMessage.IsTracked = true; 
                    caseEmailMessage.buildertek__Is_Incoming_Email__c = false;
                    caseEmailMessage.MessageDate = system.now();
                    caseEmailMessage.TextBody = body.replaceAll('<br/>', '\n');
                    system.debug('Content length ---------> '+body.length());
                    
                    caseEmailMessage.status = '5';
                    caseEmailMessage.RelatedToId = recordId;
                    caseEmailMessage.buildertek__Subject__c = 'Re: '+subject;
                    
                 
                        
                        insert caseEmailMessage;        
                    
                    
                    
                    EmailMessageRelation emr = new EmailMessageRelation();
                    emr.emailMessageId = caseEmailMessage.id;
                    emr.relationId = UserInfo.getUserId(); // user id / contact Id of the sender
                    emr.relationType = 'FromAddress';
                    emr.relationAddress = caseEmailMessage.fromAddress;
                   
                        
                        insert emr;        
                    
                    
                   
                }
            }
             list<buildertek__Change_Order__c> corec;
             
                    corec = [select id,
                                        Name,
                                        buildertek__Customer_Accepted_Date__c,
                                        buildertek__Status__c,
                                        buildertek__Date_Approved__c,
                                        buildertek__CO_Submit_Date__c
                                        from buildertek__Change_Order__c where Id=:recordId limit 1];
                
                if(corec.size()>0){
                    corec[0].buildertek__Date_Approved__c = system.now();
                    if (corec[0].buildertek__CO_Submit_Date__c == null) {
                      corec[0].buildertek__CO_Submit_Date__c = System.today();  
                    } 
                    update corec;
                    
                }
              return message;                   
        }catch(Exception exp){
             system.debug('Error Message --------> '+exp);
            String message = exp.getMessage();
            return message;    
         }
         
     }
     
      @AuraEnabled
     public static String acceptandsendProposal(String htmlBody, String recordId, String templateId, List<String> to, List<String> cc,string Emailsubject, string fileid){
         try{
             String body = '';
            buildertek__Change_Order__c changeRec = [select id, Name , buildertek__Auto_Number__c , buildertek__Project__r.Name , buildertek__Project__r.buildertek__Auto_Number__c from buildertek__Change_Order__c where Id =: recordId Limit 1];

           //  String subject =  Emailsubject;  
             String subject='';
             list<buildertek__Admin_Interface_Node_Configuration__c> adminInterfaceNodeConfigurations = [Select Id,
                                                                                                  buildertek__Quote_Configuration__c,buildertek__Email_Subject__c 
                                                                                                  from buildertek__Admin_Interface_Node_Configuration__c
                                                                                                  WHERE Name=:'Change Order Configuration' and buildertek__Email_Subject__c !=null limit 1];
            if(adminInterfaceNodeConfigurations.size()>0){
                subject = adminInterfaceNodeConfigurations[0].buildertek__Email_Subject__c;
            }else{
                subject = 'change Order'; 
            }
            List<string> strTO = new List<string>();
            List<string> strCC = new List<string>();
            SET<Id> contactIdSet = new SET<Id>();
            List<Contact> conList = new List<Contact>();
            if(Schema.sObjectType.Contact.fields.Id.isAccessible()
                && Schema.sObjectType.Contact.fields.email.isAccessible()){
                conList = [Select Id, email from Contact where Id IN:to and email != null];        
            }
            system.debug('conList -------> '+conList);
            for(Contact con: conList){
                strTO.add(con.email);
            }
             
            List<Contact> ccConList = new List<Contact>(); 
            if(cc.size() > 0 && Schema.sObjectType.Contact.fields.Id.isAccessible()
                && Schema.sObjectType.Contact.fields.Email.isAccessible()){
                ccConList = [Select Id, email from Contact where Id IN:cc and Email != null];        
            }
            if(ccConList.size() > 0){
                for(Contact con: ccConList){
                    strCC.add(con.email);
                }    
            }
             
             List<Messaging.SingleEmailMessage> mails = new List<Messaging.SingleEmailMessage>();
             Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
             system.debug('strTO ---------> '+strTO);
             if(conList.size()>0){
                 mail.setTargetObjectId(conList[0].Id);
                 mail.setWhatId(recordId);
             }
             mail.setToAddresses(strTO);
             if(strCC != null && strCC.size() > 0) {
                 system.debug('strCC -------> '+strCC);
                mail.setCcAddresses(strCC);
             }
             mail.setSaveAsActivity(true);
             EmailServicesAddress eServices;
             if(Schema.sObjectType.EmailServicesAddress.fields.Id.isAccessible()&&
                Schema.sObjectType.EmailServicesAddress.fields.AuthorizedSenders.isAccessible() &&
                Schema.sObjectType.EmailServicesAddress.fields.EmailDomainName.isAccessible() &&
                Schema.sObjectType.EmailServicesAddress.fields.LocalPart.isAccessible() &&
                Schema.sObjectType.EmailServicesAddress.fields.IsActive.isAccessible()){
                 eServices =  [SELECT Id,AuthorizedSenders,EmailDomainName,IsActive,LocalPart FROM EmailServicesAddress where LocalPart = 'projects'];
            } 
             string fromAddress = eServices.LocalPart+'@'+eServices.EmailDomainName; 
               List<buildertek__ConfirmationPageSiteURL__c> confirmationurl = buildertek__ConfirmationPageSiteURL__c.getall().values();
             string SiteUrl;
             if(confirmationurl.size() > 0){
               SiteUrl = confirmationurl[0].buildertek__SiteURL__c ;
             }
            
             body += 'Hi, <br/><br/> ';
             body += '</br> Please &nbsp;'; 
             body += '<a href='+ SiteUrl +'buildertek__ConfirmationPage?Id='+recordId+'&templateId='+templateId+'>Click here</a>';
             body += '&nbsp;to confirm your Change Order details. <br/> <br/> <br/>' ; 
            //body += '<br/><center><a href="mailto:'+fromAddress+'?subject='+subject+'&body=Approved"><button type="button" style="cursor: pointer;background-color: #005fb2;color: white;padding-left: 16px;padding-right: 16px;text-align: center;vertical-align: middle;border: 1px solid #0070d2;line-height: 30px;min-height: 32px;cursor: pointer;">Approve</button></a> &nbsp;&nbsp;&nbsp;<a href="mailto:'+fromAddress+'?subject='+subject+'&body=Rejected"><button type="button" style="cursor: pointer;background-color: #a61a14;color: white;padding-left: 16px;padding-right: 16px;text-align: center;vertical-align: middle;border: 1px solid #0070d2;line-height: 30px;min-height: 32px;cursor: pointer;">Reject</a></button></center><br/>';

             mail.setReplyTo(fromAddress);
            // subject = subject ; 
             subject = subject +'[ref:'+recordId+']'; 
             mail.setSubject(subject);
             mail.setHTMLBody(body);
             List<Messaging.Emailfileattachment> fileAttachments = new List<Messaging.Emailfileattachment>();
             Messaging.Emailfileattachment efa = new Messaging.Emailfileattachment();
             efa.setFileName(changeRec.buildertek__Project__r.Name +'-' + changeRec.buildertek__Project__r.buildertek__Auto_Number__c +'-' + changeRec.buildertek__Auto_Number__c+'.pdf');
              system.debug('templateid-----'+templateId+'record---> '+recordId);
             system.debug('Blob ---> '+setAttachmentBody(recordId, templateId,fileid));
             efa.setBody(setAttachmentBody(recordId, templateId,fileid));             
             fileAttachments.add(efa); 
             mail.setFileAttachments(fileAttachments);
             mails.add(mail);
             Messaging.SendEmailResult[] results = Messaging.sendEmail(mails);
             String message = 'Success';
              if(results.size() > 0){
                if (results[0].isSuccess()) {
                    string Toaddresses= '';
                    string CCaddresses= '';
                    integer i = 0;
                    for(String Str : strTO){
                        Toaddresses += Str;
                        if(strTO.size() > i){
                            Toaddresses += ';';
                        }
                        i++;
                    }
                    for(String Str : strCC){
                        CCaddresses += Str;
                        if(strCC.size() > i){
                            CCaddresses += ';';
                        }
                        i++;
                        
                    }
                    system.debug('CCaddresses ----------> '+CCaddresses);
                    
                  

                
                    EmailMessage caseEmailMessage = new EmailMessage();
                    caseEmailMessage.fromAddress= UserInfo.getUserEmail();
                    caseEmailMessage.ToAddress = Toaddresses;
                    caseEmailMessage.FromName = UserInfo.getUserName();
                    caseEmailMessage.CcAddress = CCaddresses;
                    caseEmailMessage.Subject = subject;
                    caseEmailMessage.HtmlBody = body;
                    caseEmailMessage.Incoming= False;
                    caseEmailMessage.buildertek__Is_Incoming_Email__c = false;
                    caseEmailMessage.MessageDate = system.now();
                    caseEmailMessage.TextBody = body.replaceAll('<br/>', '\n');
                    system.debug('Content length ---------> '+body.length());
                    
                    caseEmailMessage.status = '5';
                    caseEmailMessage.RelatedToId = recordId;
                    caseEmailMessage.buildertek__Subject__c = 'Re: '+subject;
                    
                 
                        
                        insert caseEmailMessage;        
                    
                    
                    
                    EmailMessageRelation emr = new EmailMessageRelation();
                    emr.emailMessageId = caseEmailMessage.id;
                    emr.relationId = UserInfo.getUserId(); // user id / contact Id of the sender
                    emr.relationType = 'FromAddress';
                    emr.relationAddress = caseEmailMessage.fromAddress;
                   
                        
                        insert emr;        
                    
                    
                   
                }
            }
            list<buildertek__Change_Order__c> corec;
            RecordType rt;
            //string primeContract = '';
            list<buildertek__Contract__c>  contractlist  = new list<buildertek__Contract__c>();
             rt = [SELECT Id FROM RecordType WHERE sObjectType='buildertek__Contract__c' AND Name = 'Prime Contract'];
                    corec = [select id,
                                        Name,
                                        buildertek__Customer_Accepted_Date__c,
                                        buildertek__Status__c,buildertek__Project__c,buildertek__Contract__c,
                                        buildertek__Date_Approved__c
                                        from buildertek__Change_Order__c where Id=:recordId limit 1];
                 if(corec[0].buildertek__Project__c != null){
                      contractlist = [select id,Name,buildertek__Project__c from buildertek__Contract__c where buildertek__Project__c =: corec[0].buildertek__Project__c AND
                                                                   RecordTypeId =: rt.id order by CreatedDate ];
                    /* for(buildertek__Contract__c  conRec: contractlist ){
                       if(conRec.buildertek__Project__c == corec[0].buildertek__Project__c){
                           primeContract = conRec.id;
                           break;
                       }
                     
                     }*/
                 }
                
                if(corec.size()>0){
                    
                            //corec[0].buildertek__Status__c = 'Sent';
                             corec[0].buildertek__Status__c ='Customer Approved'; 
                             corec[0].buildertek__Date_Approved__c = system.now();
                             corec[0].buildertek__Customer_Accepted_Date__c = System.today();
                             if(contractlist.size() > 0){
                              corec[0].buildertek__Contract__c = contractlist[0].id;
                             }//else{
                               // corec[0].buildertek__Contract__c = contractlist[0].id; 
                            // }
                            update corec;
                    
                }
                
             return message;                   
         }catch(Exception exp){
             system.debug('Error Message --------> '+exp);
            String message = exp.getMessage();
            return message;    
         }
         
     }
     
     
     
     private static Blob setAttachmentBody(String recordId, String templateId, String fileid){
        pagereference pdf;
        pdf = Page.buildertek__BT_GeneratePdf;
        pdf.getParameters().put('recordId',recordId);  
        pdf.getParameters().put('templateId',templateId);
        pdf.getParameters().put('fileId',fileId);
        pdf.setRedirect(true);
        
        Blob blobbody = !Test.isRunningTest() ? pdf.getContent() : Blob.ValueOf('dummy text');
        return blobbody;
    }
    

    
        /* To Save the Signature in Files */
    @AuraEnabled
    public static string saveSign(String recId,String base64Data, String contentType,string signName){
        system.debug('base64Data-------------'+base64Data);
        string conversn;
        if(base64Data.length() > 1696 || Test.isRunningTest()){  
            base64Data = EncodingUtil.urlDecode(base64Data, 'UTF-8');   
            ContentVersion conVer = new ContentVersion();
            conVer.ContentLocation = 'S'; // to use S specify this document is in Salesforce, to use E for external files
            conVer.PathOnClient = 'SignatureName.png'; // The files name, extension is very important here which will help the file in preview.
            conVer.Title = signName; // Display name of the files
            conVer.VersionData = EncodingUtil.base64Decode(base64Data); // converting your binary string to Blog
            insert conVer;    //Insert ContentVersion
            system.debug('*******conVer*******'+conVer);
            // First get the Content Document Id from ContentVersion Object
            Id conDoc = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:conVer.Id].ContentDocumentId;
            //create ContentDocumentLink  record 
            ContentDocumentLink conDocLink = New ContentDocumentLink();
            conDocLink.LinkedEntityId = recId; // Specify RECORD ID here i.e Any Object ID (Standard Object/Custom Object)
            conDocLink.ContentDocumentId = conDoc;  //ContentDocumentId Id from ContentVersion
            conDocLink.shareType = 'I';
            insert conDocLink;  
           system.debug('conDocLink---'+conDocLink.id);
           
            list<buildertek__Change_Order__c> corec;
            RecordType rt;
            list<buildertek__Contract__c>  contractlist  = new list<buildertek__Contract__c>();
             rt = [SELECT Id FROM RecordType WHERE sObjectType='buildertek__Contract__c' AND Name = 'Prime Contract'];
                    corec = [select id,
                                        Name,
                                        buildertek__Customer_Accepted_Date__c,
                                        buildertek__Status__c,buildertek__Project__c,buildertek__Contract__c,
                                        buildertek__Date_Approved__c
                                        from buildertek__Change_Order__c where Id=:recId limit 1];
                 if(corec[0].buildertek__Project__c != null){
                      contractlist = [select id,Name,buildertek__Project__c from buildertek__Contract__c where buildertek__Project__c =: corec[0].buildertek__Project__c AND
                                                                   RecordTypeId =: rt.id order by CreatedDate ];
                 }
             
                   /* corec = [select id,
                                        Name,
                                        buildertek__Status__c,
                                        buildertek__Date_Approved__c
                                        from buildertek__Change_Order__c where Id=:recId limit 1];*/
                
                if(corec.size()>0){
                    
                            corec[0].buildertek__Status__c = 'Customer Approved';
                           
                             corec[0].buildertek__Date_Approved__c = system.now();
                             corec[0].buildertek__Customer_Accepted_Date__c = System.today();
                            if(contractlist.size() > 0){
                                corec[0].buildertek__Contract__c = contractlist[0].id;
                            }
                          
                            update corec;
                    system.debug(corec+'corec---'+corec[0].buildertek__Date_Approved__c);
                }
                
             conversn = [SELECT Id,VersionData FROM ContentVersion WHERE ContentDocumentId = :conDoc AND IsLatest = true].Id;
            //system.debug('conversn[0].Id ='+conversn[0].Id);
            return conversn;
        }else{
             String message = 'NoImage';
            return message;
        }
        
    } 
    
}