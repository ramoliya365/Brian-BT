{"dataSourceLinks":[],"filters":[],"gridLayouts":[{"maxWidth":1200,"name":"Default","numColumns":37,"pages":[{"label":"Pipeline Trending","name":"5def93a8-4d40-4b37-803e-ff60852c8a79","navigationHidden":false,"widgets":[{"colspan":37,"column":0,"name":"container_1","row":0,"rowspan":8,"widgetStyle":{"backgroundColor":"rgb(244, 244, 244)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":21,"name":"dateselector_2","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":29,"name":"listselector_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":5,"column":1,"name":"number_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":35,"column":1,"name":"chart_1","row":9,"rowspan":24,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":7,"name":"number_2","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"number_4","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":21,"name":"text_1","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":29,"name":"text_2","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":1,"name":"text_3","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":7,"name":"text_4","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_5","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":19,"name":"text_6","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":8,"column":1,"name":"link_1","row":37,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":35,"column":1,"name":"text_9","row":33,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]},{"label":"Pipeline Trending Details","name":"1d2c15df-b0e4-45e3-b165-c0444bd877aa","navigationHidden":false,"widgets":[{"colspan":37,"column":0,"name":"container_1","row":0,"rowspan":8,"widgetStyle":{"backgroundColor":"rgb(244, 244, 244)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":21,"name":"dateselector_2","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":7,"column":29,"name":"listselector_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":5,"column":1,"name":"number_1","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":35,"column":1,"name":"chart_1","row":9,"rowspan":24,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":7,"name":"number_2","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"number_4","row":3,"rowspan":3,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":21,"name":"text_1","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":7,"column":29,"name":"text_2","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":1,"name":"text_3","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":7,"name":"text_4","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":5,"column":13,"name":"text_5","row":1,"rowspan":2,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1}},{"colspan":1,"column":19,"name":"text_6","row":1,"rowspan":5,"widgetStyle":{"backgroundColor":"rgba(255, 255, 255, 0)","borderColor":"#C6D3E1","borderEdges":["left"],"borderRadius":0,"borderWidth":2}},{"colspan":35,"column":1,"name":"table_1","row":40,"rowspan":33,"widgetStyle":{"borderEdges":[]}},{"colspan":5,"column":31,"name":"listselector_2","row":36,"rowspan":3,"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":["all"],"borderRadius":4,"borderWidth":1}},{"colspan":8,"column":1,"name":"link_2","row":37,"rowspan":2,"widgetStyle":{"borderEdges":[]}},{"colspan":35,"column":1,"name":"text_9","row":33,"rowspan":2,"widgetStyle":{"borderEdges":[]}}]}],"rowHeight":"fine","selectors":[],"style":{"alignmentX":"left","alignmentY":"top","backgroundColor":"#FFFFFF","cellSpacingX":0,"cellSpacingY":0,"fit":"original","gutterColor":"rgb(197, 211, 224)"},"version":1.0}],"layouts":[],"steps":{"pipeline_change":{"broadcastFacet":true,"groups":[],"label":"pipeline_change","numbers":[],"query":"x1 = load \"buildertek__OpportunityHistory\";  START = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; c = group START by all full, END by all; c = foreach c generate coalesce(sum(END['Amount']), 0) - coalesce(sum(START['Amount']), 0) as 'sum_Amount', round(coalesce( (coalesce(sum(END['Amount']), 0) - coalesce(sum(START['Amount']), 0)) / coalesce(sum(START['Amount']), 0), 0),2) as 'sum_percent', case when sum(END['Amount']) <0 then \"#BA0517\" when sum(START['Amount']) >0 then \"#2e844a\" else \"#514f4d\" end as 'color';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":[],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"Intermediate":{"broadcastFacet":true,"groups":[],"label":"Intermediate","numbers":[],"query":"q = load \"buildertek__OpportunityHistory\";q = group q by all;q = foreach q generate case when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\"+ \" ahead\" else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" end  as 'Start_ValidTo', case when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}}) -1 == -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" + \" ago\"when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}}) -1 < -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\" + \" ago\"  when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1 == 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\"+ \" ahead\"when ({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1 > 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"min\"),1).asObject()}})-1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"min\"),0).asObject()}}\" end  as 'Start_ValidFrom',case when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidFrom', case when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}}) +1 == -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}}) +1 < -1 then number_to_string((({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1)*-1 ,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1 == 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when ({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1 > 1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})+1,\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidTo', case when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" + \" ago\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} < -1 then number_to_string(({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}})*-1,\"#\")+ \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\" + \" ago\"  when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} == 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\"+ \" ahead\"when {{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}} > 1 then number_to_string({{valueAt(cell(Close_Date_1.selection,0,\"max\"),1).asObject()}},\"#\") + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}s\"+ \" ahead\"  else \"current\"  + \" {{valueAt(cell(Close_Date_1.selection,0,\"max\"),0).asObject()}}\" end  as 'End_ValidFrom1'; final = foreach q generate 'Start_ValidFrom', 'Start_ValidTo', 'End_ValidFrom', 'End_ValidTo', 'Start_ValidTo' + 'End_ValidFrom1' as 'Update_ValidTo', 'Start_ValidFrom' as 'Update_ValidFrom','End_ValidTo' as 'Update_End_ValidTo' ","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":[],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"Opportunity_Details_1":{"broadcastFacet":true,"groups":["Opp.Name","Opp.Owner.UniqueUserName","Opp.ForecastCategoryName","Opp.StageName","Opp.CloseDate"],"label":"Opportunity Details","numbers":["sum_Amount"],"query":"x1 = load \"buildertek__OpportunityHistory\"; x1 = filter x1 by 'Id' in all; START = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START = foreach START generate \"0_START\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opp.Account.Name' as 'Opp.Account.Name', 'Opp.Name' as 'Opp.Name', 'Opp.Owner.UniqueUserName' as 'Opp.Owner.UniqueUserName', 'Opp.Amount' as 'Opp.Amount', 'Opp.CloseDate' as 'Opp.CloseDate', 'Opp.StageName' as 'Opp.StageName'; END = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = foreach END generate \"9_END\" as 'Bucket', 'Amount' as 'Amount', 'OpportunityId' as 'OpportunityId', 'Opp.Account.Name' as 'Opp.Account.Name', 'Opp.Name' as 'Opp.Name', 'Opp.Owner.UniqueUserName' as 'Opp.Owner.UniqueUserName', 'Opp.Amount' as 'Opp.Amount', 'Opp.CloseDate' as 'Opp.CloseDate', 'Opp.StageName' as 'Opp.StageName'; upd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Update_ValidFrom\").asString()}}\"]; upd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Update_End_ValidTo\").asString()}}\"..]; upd = group upd_start by OpportunityId right, upd_end by OpportunityId; upd = foreach upd generate upd_end.'OpportunityId' as 'OpportunityId', upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opp.Account.Name') as 'Opp.Account.Name', last(upd_end.'Opp.Name') as 'Opp.Name', last(upd_end.'Opp.Owner.UniqueUserName') as 'Opp.Owner.UniqueUserName', last(upd_end.'Opp.Amount') as 'Opp.Amount', last(upd_end.'Opp.CloseDate') as 'Opp.CloseDate', last(upd_end.'Opp.StageName') as 'Opp.StageName'; upd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"false\" ) then \"8_CLOSED_LOST\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"true\" ) then \"7_CLOSED_WON\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName', 'AmountStart', 'AmountEnd'; upd_full_closed = filter upd_full_closed by 'Bucket' != \"OTHER\"; upd_full_closed = foreach upd_full_closed generate 'Bucket', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName', ( case 'Bucket' when \"8_CLOSED_LOST\" then (0 - 'AmountEnd') when \"7_CLOSED_WON\" then (0 - 'AmountEnd') end ) as 'Amount'; upd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]) ) then \"5_MOVED_OUT\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"1_NEW\" when ( not 'New' and 'Stage.IsClosedStart' == \"true\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"2_REOPEN\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and (('Stage.IsClosedStart' == \"false\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}])) or ('Stage.IsClosedStart' == \"true\")) ) then \"4_MOVED_IN\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName', 'AmountStart', 'AmountEnd'; upd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \"OTHER\"; upd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \"5_MOVED_OUT\" then (0 - 'AmountEnd') when \"1_NEW\" then 'AmountEnd' when \"2_REOPEN\" then 'AmountEnd' when \"4_MOVED_IN\" then 'AmountEnd' end ) as 'Amount', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName'; upd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \"6_REDUCE\" when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \"3_EXPAND\" else \"OTHER\" end ) as 'Bucket', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName', 'AmountStart', 'AmountEnd'; upd_delta = filter upd_delta by 'Bucket' != \"OTHER\"; upd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \"6_REDUCE\" then 'AmountEnd' - 'AmountStart' when \"3_EXPAND\" then 'AmountEnd' - 'AmountStart' end ) as 'Amount', 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.Amount', 'Opp.CloseDate', 'Opp.StageName'; WATERFALL = union START, upd_full_notinperiod, upd_delta, upd_full_closed, END; WATERFALL = filter WATERFALL by {{column(waterfall_chart.selection, [\"Bucket\"]).asEquality(\"Bucket\")}}; WATERFALL = group WATERFALL by 'OpportunityId'; WATERFALL = foreach WATERFALL generate last('OpportunityId') as 'OpportunityId', last('Opp.Account.Name') as 'Opp.Account.Name', last('Opp.Name') as 'Opp.Name', last('Opp.Owner.UniqueUserName') as 'Opp.Owner.UniqueUserName', last('Opp.Amount') as 'Opp.Amount', last('Opp.CloseDate') as 'Opp.CloseDate', last('Opp.StageName') as 'Opp.StageName', last('Amount') as 'Amount'; WATERFALL = foreach WATERFALL generate 'OpportunityId', 'Opp.Account.Name', 'Opp.Name', 'Opp.Owner.UniqueUserName', 'Opp.CloseDate', 'Opp.StageName', 'Opp.Amount', sum('Amount') as 'sum_Amount'; WATERFALL = order WATERFALL by {{cell(step_hbar_group.selection, 0, \"value\").asString()}}; WATERFALL = limit WATERFALL 100;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"none","strings":["Opp.Name","Opp.Owner.UniqueUserName","Opp.ForecastCategoryName","Opp.StageName","Opp.CloseDate"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"borderColor":"#e0e5ee","borderWidth":1,"cell":{"backgroundColor":"#ffffff","fontColor":"#16325c","fontSize":12},"columnProperties":{},"columns":[],"customBulkActions":[],"header":{"backgroundColor":"#f4f6f9","fontColor":"#16325c","fontSize":12},"innerMajorBorderColor":"#a8b7c7","innerMinorBorderColor":"#e0e5ee","maxColumnWidth":300,"minColumnWidth":40,"mode":"variable","numberOfLines":1,"showActionMenu":true,"totals":true,"verticalPadding":8},"type":"table"}},"waterfall_chart":{"broadcastFacet":true,"groups":["Bucket"],"label":"waterfall_chart","numbers":["sum_Amount"],"query":"x1 = load \"buildertek__OpportunityHistory\"; x1 = filter x1 by 'Id' in all;  START_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START_REAL = filter START_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START_REAL = filter START_REAL by 'Stage.IsClosed' == \"false\"; START_REAL = filter START_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START_REAL = group START_REAL by all; START_REAL = foreach START_REAL generate \"0_START\" as 'Bucket', sum('Amount') as 'sum_Amount'; START_FAKE = group x1 by all; START_FAKE = foreach START_FAKE generate \"0_START\" as 'Bucket', (count() - count()) as 'sum_Amount'; START = union START_FAKE, START_REAL; START = group START by all; START = foreach START generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; END_REAL = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END_REAL = filter END_REAL by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END_REAL = filter END_REAL by 'Stage.IsClosed' == \"false\"; END_REAL = filter END_REAL by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END_REAL = group END_REAL by all; END_REAL = foreach END_REAL generate \"9_END\" as 'Bucket', sum('Amount') as 'sum_Amount'; END_FAKE = group x1 by all; END_FAKE = foreach END_FAKE generate \"9_END\" as 'Bucket', (count() - count()) as 'sum_Amount'; END = union END_FAKE, END_REAL; END = group END by all; END = foreach END generate last('Bucket') as 'Bucket', last('sum_Amount') as 'sum_Amount'; upd_start = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Update_ValidFrom\").asString()}}\"]; upd_start = filter upd_start by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter x1 by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; upd_end = filter upd_end by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Update_End_ValidTo\").asString()}}\"..]; upd = group upd_start by OpportunityId right, upd_end by OpportunityId; upd = foreach upd generate upd_end.'OpportunityId' as OpportunityId, upd_start.'OpportunityId' is null as 'New', first(upd_start.'Amount') as 'AmountStart', first(upd_start.'Stage.IsClosed') as 'Stage.IsClosedStart', first(upd_start.'Stage.IsWon') as 'Stage.IsWonStart', first(upd_start.'CloseDate_sec_epoch') as 'CloseDateStart', last(upd_end.'Amount') as 'AmountEnd', last(upd_end.'Stage.IsClosed') as 'Stage.IsClosedEnd', last(upd_end.'Stage.IsWon') as 'Stage.IsWonEnd', last(upd_end.'CloseDate_sec_epoch') as 'CloseDateEnd', last(upd_end.'Opp.Owner.UniqueUserName') as 'Opp.Owner.UniqueUserName'; upd_full_closed = foreach upd generate ( case when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"false\" ) then \"8_CLOSED_LOST\" when ( toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'Stage.IsClosedEnd' == \"true\" and 'Stage.IsWonEnd' == \"true\" ) then \"7_CLOSED_WON\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_full_closed = filter upd_full_closed by 'Bucket' != \"OTHER\"; upd_full_closed = group upd_full_closed by 'Bucket'; upd_full_closed = foreach upd_full_closed generate 'Bucket', ( case 'Bucket' when \"8_CLOSED_LOST\" then - sum('AmountEnd') when \"7_CLOSED_WON\" then - sum('AmountEnd') end ) as 'sum_Amount'; upd_full_notinperiod = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and not(toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]) ) then \"5_MOVED_OUT\" when ( 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"1_NEW\" when ( not 'New' and 'Stage.IsClosedStart' == \"true\" and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] ) then \"2_REOPEN\" when ( not 'New' and toDate('CloseDateEnd') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and (('Stage.IsClosedStart' == \"false\" and not(toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}])) or ('Stage.IsClosedStart' == \"true\")) ) then \"4_MOVED_IN\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_full_notinperiod = filter upd_full_notinperiod by 'Bucket' != \"OTHER\"; upd_full_notinperiod = group upd_full_notinperiod by 'Bucket'; upd_full_notinperiod = foreach upd_full_notinperiod generate 'Bucket', ( case 'Bucket' when \"5_MOVED_OUT\" then - sum('AmountEnd') when \"1_NEW\" then sum('AmountEnd') when \"2_REOPEN\" then sum('AmountEnd') when \"4_MOVED_IN\" then sum('AmountEnd') end ) as 'sum_Amount'; upd_delta = foreach upd generate ( case when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' > 'AmountEnd' ) then \"6_REDUCE\" when ( not 'New' and 'Stage.IsClosedStart' == \"false\" and toDate('CloseDateStart') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}] and 'AmountStart' < 'AmountEnd' ) then \"3_EXPAND\" else \"OTHER\" end ) as 'Bucket', 'AmountStart', 'AmountEnd'; upd_delta = filter upd_delta by 'Bucket' != \"OTHER\"; upd_delta = group upd_delta by 'Bucket'; upd_delta = foreach upd_delta generate 'Bucket', ( case 'Bucket' when \"6_REDUCE\" then sum('AmountEnd') - sum('AmountStart') when \"3_EXPAND\" then sum('AmountEnd') - sum('AmountStart') end ) as 'sum_Amount'; WATERFALL = union START, upd_full_notinperiod, upd_delta, upd_full_closed, END; WATERFALL = order WATERFALL by 'Bucket' asc;","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":["Bucket"],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"pipeline_start":{"broadcastFacet":true,"groups":[],"label":"pipeline_start","numbers":[],"query":"START = load \"buildertek__OpportunityHistory\";  START = filter START by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"Start_ValidFrom\").asString()}}\"]; START = filter START by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"Start_ValidTo\").asString()}}\"..]; START = filter START by 'Stage.IsClosed' == \"false\"; START = filter START by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; START = group START by all; START = foreach START generate \"0_START\" as 'Bucket', sum('Amount') as 'sum_Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":[],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"step_hbar_group":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"$ High to Low\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"$ High to Low\",\"value\":\"'sum_Amount' desc\"}","{\"display\":\"$ Low to High\",\"value\":\"'sum_Amount' asc\"}"]},"Close_Date_1":{"broadcastFacet":false,"datasets":[{"name":"OpportunityHistory","namespace":"buildertek"}],"isGlobal":false,"label":"Close Date","query":{"query":"{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"CloseDate\"]}","version":-1.0},"receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"single","start":"[[[\"quarter\",0],[\"day\",0]]]","type":"aggregateflex","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":[],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"pipeline_end":{"broadcastFacet":true,"groups":[],"label":"pipeline_end","numbers":[],"query":"END = load \"buildertek__OpportunityHistory\";  END = filter END by date('ValidFromDate_Year', 'ValidFromDate_Month', 'ValidFromDate_Day') in [..\"{{cell(Intermediate.result, 0, \"End_ValidFrom\").asString()}}\"]; END = filter END by date('ValidToDate_Year', 'ValidToDate_Month', 'ValidToDate_Day') in [\"{{cell(Intermediate.result, 0, \"End_ValidTo\").asString()}}\"..]; END = filter END by 'Stage.IsClosed' == \"false\"; END = filter END by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{cell(step_time.selection, 0, \"CloseDate_1\").asString()}}]; END = group END by all; END = foreach END generate \"9_END\" as 'Bucket', sum('Amount') as 'sum_Amount';","receiveFacetSource":{"mode":"all","steps":[]},"selectMode":"single","strings":[],"type":"saql","useGlobal":true,"visualizationParameters":{"parameters":{"autoFitMode":"keepLabels","bins":{"breakpoints":{"high":100,"low":0},"bands":{"high":{"color":"#008000","label":""},"low":{"color":"#B22222","label":""},"medium":{"color":"#ffa500","label":""}}},"showValues":true,"legend":{"descOrder":false,"showHeader":true,"show":true,"customSize":"auto","position":"right-top","inside":false},"axisMode":"multi","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"hbar","binValues":false,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"columnMap":{"trellis":[],"dimensionAxis":[],"plots":["count"]},"showActionMenu":true,"measureAxis2":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"measureAxis1":{"sqrtScale":false,"showTitle":true,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"theme":"wave","applyConditionalFormatting":true,"dimensionAxis":{"showTitle":true,"customSize":"auto","showAxis":true,"icons":{"useIcons":false,"iconProps":{"fit":"cover","column":"","type":"round"}},"title":""}},"type":"chart"}},"step_time":{"broadcastFacet":false,"columns":{},"isGlobal":false,"selectMode":"singlerequired","start":"{\"display\":[\"This Quarter\"]}","type":"staticflex","useGlobal":false,"values":["{\"display\":\"All Time\",\"text\":\"all time\",\"CloseDate_1\":\"\\\"100 years ago\\\"..\\\"100 years ahead\\\"\"}","{\"display\":\"This Week\",\"CloseDate_1\":\"\\\"current week\\\"..\\\"current week\\\"\"}","{\"display\":\"Last Week\",\"CloseDate_1\":\"\\\"1 week ago\\\"..\\\"1 week ago\\\"\"}","{\"display\":\"Next Week\",\"CloseDate_1\":\"\\\"1 week ahead\\\"..\\\"1 week ahead\\\"\"}","{\"display\":\"This Month\",\"CloseDate_1\":\"\\\"current month\\\"..\\\"current month\\\"\"}","{\"display\":\"Last Month\",\"CloseDate_1\":\"\\\"1 month ago\\\"..\\\"1 month ago\\\"\"}","{\"display\":\"Next Month\",\"CloseDate_1\":\"\\\"1 month ahead\\\"..\\\"1 month ahead\\\"\"}","{\"display\":\"This Quarter\",\"CloseDate_1\":\"\\\"current quarter\\\"..\\\"current quarter\\\"\"}","{\"display\":\"Last Quarter\",\"CloseDate_1\":\"\\\"1 quarter ago\\\"..\\\"1 quarter ago\\\"\"}","{\"display\":\"Next Quarter\",\"CloseDate_1\":\"\\\"1 quarter ahead\\\"..\\\"1 quarter ahead\\\"\"}","{\"display\":\"This Year\",\"CloseDate_1\":\"\\\"current year\\\"..\\\"current year\\\"\"}","{\"display\":\"Last Year\",\"CloseDate_1\":\"\\\"1 year ago\\\"..\\\"1 year ago\\\"\"}","{\"display\":\"Next Year\",\"CloseDate_1\":\"\\\"1 year ahead\\\"..\\\"1 year ahead\\\"\"}"]}},"widgetStyle":{"backgroundColor":"#FFFFFF","borderColor":"#E6ECF2","borderEdges":[],"borderRadius":0,"borderWidth":1},"widgets":{"listselector_2":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":true,"showActionMenu":true,"step":"step_hbar_group","title":""},"type":"listselector"},"text_1":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#514f4d","size":"12px"},"insert":"Set Pipeline Start and End Dates"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"link_1":{"parameters":{"destinationLink":{"name":"1d2c15df-b0e4-45e3-b165-c0444bd877aa"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Show Opportunity Details [ + ]","textAlignment":"left","textColor":"rgb(9, 26, 62)"},"type":"link"},"link_2":{"parameters":{"destinationLink":{"name":"5def93a8-4d40-4b37-803e-ff60852c8a79"},"destinationType":"page","fontSize":14,"includeState":false,"text":"Hide Opportunity Details [ - ]","textAlignment":"left","textColor":"rgb(9, 26, 62)"},"type":"link"},"table_1":{"parameters":{"borderColor":"#FFFFFF","borderWidth":0,"cell":{"backgroundColor":"#ffffff","fontColor":"rgb(22, 50, 92)","fontSize":12},"columnProperties":{"Opp.Name":{"parameters":{"alignment":"left","styles":{"linkColor":"#006dcc"}},"type":"text"}},"columns":[],"customBulkActions":[],"exploreLink":true,"header":{"backgroundColor":"rgb(250, 250, 249)","fontColor":"rgb(81, 79, 77)","fontSize":12},"innerMajorBorderColor":"rgb(221, 219, 218)","innerMinorBorderColor":"rgb(221, 219, 218)","mode":"fittocontainer","numberOfLines":1,"showActionMenu":true,"step":"Opportunity_Details_1","totals":true,"verticalPadding":8},"type":"table"},"number_4":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"rgb(8, 7, 7)","numberSize":32,"showActionMenu":true,"step":"pipeline_end","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"container_1":{"parameters":{"alignmentX":"left","alignmentY":"top","fit":"original"},"type":"container"},"number_2":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"rgb(8, 7, 7)","numberSize":32,"showActionMenu":true,"step":"pipeline_change","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"number_1":{"parameters":{"compact":true,"exploreLink":true,"measureField":"sum_Amount","numberColor":"rgb(8, 7, 7)","numberSize":32,"showActionMenu":true,"step":"pipeline_start","textAlignment":"left","title":"","titleColor":"#091A3E","titleSize":14,"tooltip":{"customizeTooltip":false}},"type":"number"},"text_3":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#080707","size":"14px","bold":true},"insert":"Starting Pipeline"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"text_2":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#514f4d","size":"12px"},"insert":"Set Close Date for Opportunities"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"dateselector_2":{"parameters":{"absoluteModeEnabled":false,"calendarTypeSwitchingAllowed":false,"defaultFiscalMode":false,"displayMode":"filter","filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":false,"presetsEnabled":false,"relativeModeEnabled":true,"showActionMenu":false,"step":"Close_Date_1","title":""},"type":"dateselector"},"listselector_1":{"parameters":{"compact":false,"displayMode":"filter","exploreLink":false,"filterStyle":{"titleColor":"#54698D","valueColor":"#16325C"},"instant":true,"showActionMenu":false,"step":"step_time","title":""},"type":"listselector"},"text_5":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#080707","size":"14px","bold":true},"insert":"Ending Pipeline"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"text_4":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#080707","size":"14px","bold":true},"insert":"Pipeline Change"},{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"chart_1":{"parameters":{"totalValue":"useLastBucket","showValues":true,"positiveColor":"rgb(46, 132, 74)","tooltip":{"content":{"legend":{"showBinLabel":true,"measures":[],"showNullValues":true,"customizeLegend":false,"showPercentage":true,"showDimensions":true,"showMeasures":true,"dimensions":[]}}},"visualizationType":"waterfall","exploreLink":true,"title":{"fontSize":14,"subtitleFontSize":11,"label":"","align":"center","subtitleLabel":""},"trellis":{"flipLabels":false,"showGridLines":true,"size":[100,100],"enable":false,"type":"x","chartsPerLine":4},"startColor":"rgb(1, 118, 211)","totalLabel":"","showActionMenu":true,"measureAxis1":{"sqrtScale":false,"showTitle":false,"showAxis":true,"title":"","customDomain":{"showDomain":false}},"totalColor":"rgb(1, 118, 211)","step":"waterfall_chart","theme":"light","negativeColor":"rgb(186, 5, 23)","applyConditionalFormatting":false,"dimensionAxis":{"showTitle":false,"showAxis":true,"title":""}},"type":"chart"},"text_6":{"parameters":{"content":{"richTextContent":[{"attributes":{"align":"left"},"insert":"\n"}]},"showActionMenu":true},"type":"text"},"text_9":{"parameters":{"content":{"richTextContent":[{"attributes":{"color":"#514f4d","size":"14px"},"insert":"The pipeline has changed "},{"attributes":{"color":"{{cell(pipeline_change.result, 0, \"color\").asString()}}","size":"14px"},"insert":"[Sum_of_percent]"},{"attributes":{"color":"#091a3e","size":"14px"},"insert":" "},{"attributes":{"color":"#514f4d","size":"14px"},"insert":"from the start of"},{"attributes":{"color":"#091a3e","size":"14px"},"insert":" "},{"attributes":{"color":"#514f4d","size":"14px"},"insert":"[Start_ValidTo] to [End_ValidFrom] for deals closing [text]"},{"attributes":{"align":"center"},"insert":"\n"}],"values":{"Sum_of_percent":{"field":"sum_percent","sourceType":"result","step":"pipeline_change"},"Start_ValidTo":{"field":"Start_ValidTo","sourceType":"result","step":"Intermediate"},"text":{"field":"text","sourceType":"result","step":"step_time"},"End_ValidFrom":{"field":"End_ValidFrom","sourceType":"result","step":"Intermediate"}}},"showActionMenu":true},"type":"text"}}}